北京时间 2 月 21 日下午，被众多一线投研机构视为 2023 年以太坊最重要的创新，有可能开启以太坊新叙事方向的 Eigenlayer 终于披露了其 V1 版[白皮书](https://eigenlayer.xyz/whitepaper.pdf)。

Eigenlayer 是建立在以太坊上的再质押（Re-staking）协议，以太坊节点可以通过 EigenLayer 将质押的 ETH 进行二次质押来获得额外收益，同时也可将以太坊共识层效用向外传递到各类中间件、数据可用性层、侧链等协议，让它们以更低的成本享受到以太坊级别的安全性。

![](https://img.foresightnews.pro/202302/d56631c58b2e32405efe99b14c624dc1.jpeg?x-oss-process=style/scale70)

Bixin Ventures 第一时间对这份姗姗来迟的白皮书进行了解读，聚焦 Eigenlayer 的基本原理、运行机制、安全保证、治理框架、应用场景、商业化前景等核心内容。

随着白皮书的发布，EigenLayer 也计划于明日上午 9 点（PT）组织[社区 Space](https://twitter.com/i/spaces/1zqKVPbkZelJB)，大家也可以在 Space 中提问和了解更多关于 EigenLayer 的信息。

1. 碎片化的可信网络
-----------

目前，数以千计的去中心化应用（DApps）构建在以太坊之上，整个生态也在不断发展壮大。一个可信的去中心化底层网络价值基础源于：开发者不需要任何声誉或信任，就可以让其开发出来的 DApp 被任何信任该底层区块链并验证的人采用。Rollup 是以太坊性能扩展的重要方向：不使用 EVM 执行交易，最终还是回到以太坊进行结算。虽然不同的 Layer2 采用不同的安全验证方式，但是人们信任基于以太坊的 Layer2。

然而，任何不在 EVM 之上部署或证明的模块，都无法利用以太坊可信底层的安全性，比如基于新共识协议的侧链、数据可用层（DA）、新的虚拟机、预言机和可信执行环境等等，一般来说，它们需要搭建自己独立的 AVS（主动验证系统），为自己的系统安全负责。目前的 AVS 生态存在一些缺点：

* 搭建一个新的 AVS 意味着要搭建一个新的可信网络，这并非易事；
* 新的 AVS 意味着用户在支持以太坊交互费用的同时，还需要额外支付一笔 AVS 费用，这会导致价值流失；
* 对验证者来说，进入一个新的验证系统意味着要承担一定的机会成本和风险敞口；
* 当前 AVS 体系对一些 DApps 来说，安全系数被削弱了。这体现在一些依赖中间件的 DApps 的安全因为同时依赖于以太坊和中间件的信任假设，攻击中间件的成本较低而遭遇风险的可能性增加。
![](https://img.foresightnews.pro/202302/705572cdd2539beab780fb2aee74adae?x-oss-process=style/scale70)

  


2. 再质押和自由市场治理
-------------

EigenLayer 引入了 2 个新概念，即再质押和自由市场治理来实现将以太坊的安全性扩展到其他系统以及提升治理的效率。

* **再质押**
EigenLayer 允许用户将质押在以太坊上的 ETH 二次质押在 EigenLayer 上，这些二次质押的资产可以用于数据可用性层、预言机、中间件、Layer2 等。验证者通过对其提供安全和验证服务，也可以获得相应奖励。

* **自由市场治理**
EigenLayer 让验证者可以根据自己的风险偏好自由选择参与哪些模块，但验证者获得利润的前提是需要确保安全。EigenLayer 的治理模式有两点好处，第一是将稳健的底层区块链融入快速和高效的元素，第二是可选择的验证者模式可以使新的模块在验证者中去争取其他的资源，从而更好的平衡安全性和性能。

EigenLayer 上的 AVS 可以租用以太坊验证者的安全服务，有以下好处：

* 一个新的 AVS 可以通过以太坊的验证者增强经济安全性
* 使用以太坊的安全增强的费用总体来讲是最低的
* 在 EigenLayer 的安全模式增加了破坏的成本（130 亿美元）
* 价值积累：让 ETH 质押者获取 AVS 中的收益
![](https://img.foresightnews.pro/202302/4b92064ed7906f1011e71eb983cc306e.png?x-oss-process=style/scale70)

  


### 2.1 支持多种质押模式

EigenLayer 提供多种质押方式类似于 Lido 的流动性质押（Liquid Staking）以及超流动性质押（Superfluid Staking），其中超流动性质押可以允许 LP 对的质押，具体而言：

* **直接质押，**将质押在以太坊上的 ETH 直接质押到 EigenLayer 上
* **LSD 质押，**已经质押在 Lido 或 Rocket Pool 的资产再次质押到 EigenLayer 上
* **ETH LP 质押，**将质押在 DeFi 协议中的 LP Token 再次质押到 EigenLayer 上
* **LSD LP 质押，** 比如 Curve 的 stETH-ETH LP Token 再次质押到 EigenLayer 上
### 2.2 委托人

针对那些对 EigenLayer 感兴趣但不想作为节点运营商（operator）的再质押者，可以将他们的权利委托给其他的节点运营商，这些节点运营商再将代币质押到以太坊中，将获得收益的部分分配给这些再质押者。EigenLayer 提供两种模式：

* **单独质押模式：**质押者提供验证服务，可以直接加入 AVS，或者将操作委托给其他运营商同时自己继续为以太坊进行验证
* **信任模式：**选择信任的运营商来操作，如果选择的运营商没有按照约定的执行，那么其作为委托人的利益将会受到处罚。此外，再质押者需要考虑和委托人的费用比例，这里有望形成一个新的市场，每个 EigenLayer 运营商将在以太坊上建立一个委托合约，该合约规定如何将费用分配给委托人。
3. 罚没
-----

### 3.1 罚没机制设计

加密经济的安全性量化了攻击网络的成本，该成本被称为「破坏成本（Cost-of-Corruption）」。当破坏成本大于可能的破坏收益（Profit-from-Corruption）时，系统便获得了很强的安全性。EigenLayer 的罚没机制会提高破坏成本并让加密网络更加安全。

### 3.2 不使用同质化权证

EigenLayer 不会发出同质化代币作为质押权证，因为每一个用户可以都会有不同委任质押的选择，因此也拥有了不同的罚没风险；同时，如果用同质化代币去保证每一个仓位的透明性会造成仓位拥有方与节点运行商的冲突。

### 3.3 与合并挖矿的异同

EigenLayer 再质押的概念与 Bitcoin/Namecoin, Bitcoin/Elastos, Bitcoin/RSK and Litecoin/Dogecoin 的合并挖矿概念相似。合并挖矿可以省去不少成本，因为矿机在同样的加密机制下可以让其不同的 PoW 区块链同时进行挖矿。对于 PoS 的区块链来说验证者最大的成本便是质押成本，而再质押可以让质押资金被利用于不同的执行层上。

然而合并挖矿与再质押的相似处也就仅此而已。假设对于 PoS 与 PoW 都有一部分的主要公链验证者同时是多条链的验证者（也就是 PoW 出现合并挖矿、PoS 出现再质押），当他们对于较小的公链进行攻击时（例如：故意签错状态根导致跨链资产出现问题），那就会有两种情况发生：

* 在通过再质押合并的 PoS 链中，可以采取以下措施：在主链上可以对不正确的状态转换根发布欺诈证明，恶意验证者的质押资金将被罚没。
* 对于 PoW 公链，即使主链上的所有矿工都选择合并挖矿的链，也不存在显著的加密经济安全性。主要原因是无法采取罚没的选项 — — 我们无法罚没将导致恶意矿工的挖矿硬件失效或被移除，矿工的硬件仍将具有价值。
![](https://img.foresightnews.pro/202302/887cb7b08270bea3f89eefa21659dc2c?x-oss-process=style/scale70)

  


### 3.4 风险管理

EigenLayer 中存在两类风险：

* 许多运营商可能串通同时攻击一组 AVS；
* AVS 可能存在非预期的罚没漏洞（slashing vulnerabilities），如诚实节点可能被罚没。
#### 3.4.1 运营商串通

在现实中，只有一部分运营商选择加入给定的 AVS，其中一些运营商可能串通从一组 AVS 中窃取资金，然后会出现复杂的攻击。

* **一种解决方案是限制任何特定 AVS 的破坏收益。**这个解决方案取决于那些 AVS 的设计者。 例如，
* 桥可以限制罚没周期内的价值流动，
* 预言机可以限制该周期内交易的总价值，等等。
* **另一个解决方案是 EigenLayer 可以主动增加 AVS 的破坏成本。** EigenLayer 创建一个开源的仪表板，构建在 EigenLayer 上的 AVS 可以监控参与其验证任务的一组运营商是否也在许多其他 AVS 中再质押。 AVS 可以在其合约中制定规范，仅激励参与少量 AVS 的 EigenLayer 运营商。
#### 3.4.2 意外罚没

在 AVS 及其相关基础设施和合约经过实际测试之前，许多罚没风险需要控制以避免产生更大的叠加风险。 一种风险是 AVS 创建时的意外罚没漏洞（例如，代码 bug），这种漏洞一旦触发会导致诚实运营商损失资金。

我们在这里提出两条解决方案：

* **安全审计：**必须像审计智能合约一样审计 AVS 代码库。
* **对罚没的一票否决能力（veto）：**EigenLayer 中有一个治理层，其主要由以太坊和 EigenLayer 社区的重要成员组成，它有能力通过多重签名否决罚没决定。
### 3.5 治理框架

EigenLayer 使用了一个基于声誉的委员会进行治理，该委员会由以太坊和 EigenLayer 社区中的知名人士组成。 该委员会将负责对 EigenLayer 合约进行升级，审查和否决罚没事件，并允许新的 AVS 进入罚没审查过程。

AVS 可以利用这个委员会来向 EigenLayer 中的再抵押者保证他们不会受到恶意罚没或错误罚没。 同时，AVS 开发人员可以对与 AVS 相关的代码库进行实际测试。 一旦成熟并获得再质押者的信任，AVS 就可以停止使用委员会作为后备。AVS 在 EigenLayer 上面创建时可能需要委员会进行安全审计和其他尽职调查，包括检查验证者为 AVS 服务的系统要求等。

### 3.6 最大化安全性的同时最小化中心化风险

我们注意到，当使用 EigenLayer 再抵押的所有 ETH 都用于保护一个 AVS 时，这个 AVS 可以获得最大的安全性。 然而，这有两个障碍：

* AVS 给运营商的预期收入是否能高过运营成本；
* 运营商是否有足够的计算资源来参与 AVS 的验证。
EigenLayer 提出了两种可能的模块设计模式，以减轻这些担忧：

* 超大规模 AVS（Hyperscale AVS）：在超大规模 AVS 中，总计算工作量分配给所有 N 个参与的运营商。这样存储成本以及节点吞吐量要求都会降低，而系统本身可以通过聚合多个节点的性能来实现高吞吐量。
* 轻量级 AVS （Lightweight AVS）：一些任务的成本很低，所需的计算基础设施也很低，任务可以由所运营商冗余执行，例如验证 zk-proof 等。
4. EigenLayer 生态
----------------

### 4.1 实现新的应用场景

EigenLayer 通过提供 AVS 服务可以支持很多类型协议，包括：数据可用性层、去中心化定序器（sequencer）、连接以太坊的轻节点桥、Rollup 之间更快的桥、预言机、事件驱动的激活功能、MEV 管理、低延迟的侧链、帮助以太坊实现 single slot 最终性等。

### 4.2 利用质押者的异质性，大幅扩展区块空间

以太坊的节点在计算能力，风险收益偏好，特征方面都存在异质性：

* 区块链为了去中心化考虑会根据最弱的节点性能设置区块限制，性能更强的节点可以将多余的资源通过 EigenLayer 提供给其他协议使用
* 风险偏好更高的节点可以选择风险更大，收益流动性更差但是收益率更高的协议提供验证
* 通过跟可验证凭证（verifiable credentials），SBT 等技术结合，不同协议可以根据节点特征选择更适合的节点提供验证
### 4.3 打破民主和灵活性间的平衡

以太坊的更新目前通过稳健的链下民主治理方式缓慢推进，EigenLayer 可以让创新快速地部署在以太坊的可信层上，像一个测试网一样为以太坊主网的创新提供测试和经验，避免了以太坊在快速创新和民主治理之间的取舍。

### 4.4 推进以太坊质押者的去中心化进程

EigenLayer 为 AVS 提供了一个将去中心化货币化的市场，AVS 可以指定只有以太坊个人节点（home validators）可以参与任务，这样可以帮助 AVS 保持去中心化。同时，个人节点可以获得额外的收益，激励更多用户运行以太坊个人节点，提高主网的去中心化程度。

### 4.5 支持多代币的节点群

EigenLayer 允许协议的 AVS 指定自己的节点群（quorums）与再质押 ETH 的节点群共同运行，例如 A 协议可以选择使用两个节点群，一个节点群需要重新质押 ETH，另一个节点群则需要质押协议代币 $A，当两个及节点群均同意某个事项有效时，协议 A 最终同意该事项生效。这样的机制可以帮助协议代币 $A 获得实用性，为协议积累价值。

### 4.6 商业模式

协议使用 EigenLayer 可以采用的商业模式包括：

* 纯钱包模式：协议在 EigenLayer 上面部署一个 AVS 提供服务，用户支付费用获得服务，收入一部分支付给协议的钱包，另一部分支付给 EigenLayer 中的 ETH 再质押者。
* 代币化费用：协议在 EigenLayer 上面部署一个 AVS 作为协议，用户支付费用获得服务，收入一部分支付给协议代币持有者，另一部分支付给 EigenLayer 中的 ETH 再质押者。
* 使用协议原生代币支付：协议在 EigenLayer 上面部署一个 AVS 作为协议，用户需要支付协议代币获得服务，收入一部分支付给协议代币持有者，另一部分支付给 EigenLayer 中的 ETH 再质押者。
* 双币质押：协议指定协议代币和 ETH 的两个节点群共同运行，这样可以帮助协议代币获得实用性，使用 ETH 也防止协议代币价格下降时对经济安全性的损害。
