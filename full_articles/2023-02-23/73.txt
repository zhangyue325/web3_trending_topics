EigenLayer is a restaking protocol for Ethereum that enables existing ETH stakers to opt in to validating new software modules (e.g. consensus protocols, data availability layers, oracles, middleware, etc.) built on top of the Ethereum ecosystem. Restakers will then earn an extra share of rewards, while being subject to additional slashing conditions on their staked ETH.

EigenLayer’s benefits extend beyond security and decentralization, as it acts as a stage where new ideas and implementations can be battle-tested in numerous iterations before being integrated into Ethereum itself.

In this article, we aim to summarize the key content within their newly published whitepaper, and will be publishing a deeper dive in another research piece. Do keep an eye out on our [Twitter](https://twitter.com/BixinVentures) and [Medium](https://bixinventures.medium.com/) page to keep updated.

![](https://img.foresightnews.pro/202302/d56631c58b2e32405efe99b14c624dc1.jpeg?x-oss-process=style/scale70)There are thousands of decentralized applications (DApps) currently built on top of Ethereum, and the ecosystem is constantly growing. However, not all applications are taking full advantage of the trust and security of Ethereum.

Actively validated services (AVS) such as sidechains based on new consensus protocols, data availability layers (DA), new virtual machines, oracles, and trusted execution environments, etc. are typically responsible for their own security, and there are distinct disadvantages to the current AVS ecosystem:

* It is difficult to bootstrap a new trust network
* There is leakage of value since users pay fees to a separate trust network on top of transaction fees on Etheruem
* The cost of providing staking rewards in return for network security far outweighs the operational costs of the AVS
* Having multiple trust networks means weakened security for dApps since the cost of attack is the minimum cost of corruption across all its dependencies
![](https://img.foresightnews.pro/202302/2e940a979a0cf0764b1e78e88bddcc4a?x-oss-process=style/scale70)EigenLayer introduces 2 new concepts to extend Ethereum’s security to other systems and improve the efficiency of governance, namely re-staking and free-market governance.

* **Restaking:** Users can re-stake their ETH with EigenLayer by opting in to various AVS such as data availability layers, oracles, middleware, Layer 2s, etc. In return, validators are rewarded with extra revenue for providing them with security and verification services.
* **Free market governance:** By giving validators the freedom to choose which AVS to opt in or out of based on their risk appetite, it (a) complements the stable and conservative governance of the core blockchain with a fast and efficient, free-market governance structure for launching new supplementary capabilities and (b) allows new AVSs to take advantage of the diverse resources among validators, resulting in better balancing of security and performance.
Therefore, EigenLayer can solve the problems of AVS ecosystems as mentioned above:

* New AVSs can bootstrap economic security with existing Ethereum validators
* Greater value accrual by allowing ETH stakers to earn additional revenue through validating for various AVSs
* Capital cost for using Ethereum’s security enhancements are amortized across multiple AVSs
* Drastically increases the cost-of-corruption since trust is now aggregated
![](https://img.foresightnews.pro/202302/4b92064ed7906f1011e71eb983cc306e.png?x-oss-process=style/scale70)EigenLayer offers a variety of staking methods similar to Lido’s liquid staking and superfluid staking, including:

* **Native restaking:** Validators restake their staked ETH
* **LSD restaking:** Validators restake assets that are already staked via Lido or Rocket Pool
* **ETH LP restaking:** Validators restake the LP token of a pair which includes ETH
* **LSD LP restaking:** Validators restake the LP token of a pair which includes a liquid staking ETH token, such as Curve’s stETH-ETH LP Token
Restakers who are interested in participating in EigenLayer but do not want to act as node operators themselves, can delegate their rights to other operators, who in turn deposit the delegated stake to spin up new nodes and distribute the proceeds to these restakers.

For this, EigenLayer offers two models:

* **Solo staking:** Restakers can opt to provide verification services and join AVS directly, or delegate operations to other operators while continuing to validate Ethereum themselves
* **Trust model:** Restakers choose a trusted operator to delegate to. If the selected operator does not perform in accordance with the agreement, then its interests as the delegator will be penalized. In addition, restakers need to consider the proportion of fees that operators share back to delegators, giving rise to a new market, where each EigenLayer operator will put up a delegation contract on Ethereum that stipulates how fees will be distributed and route them accordingly.
Slashing is an important mechanism that imposes a high cost of corruption, and therefore ensures strong cryptoeconomic security. Since stakers point their withdrawal authority towards EigenLayer contracts, any malicious actor that withdraws their ETH on the Ethereum base layer will have their ETH slashed by the on-chain contract of the AVS.

EigenLayer also does not issue fungible tokens representing restaked positions, because each user may have different combinations of modules and therefore have different slashing risks. At the same time, transparency of fungible tokens may create conflicts between the holders of the positions and the node operators.

![](https://img.foresightnews.pro/202302/b2a9eeaf0084c9740ccc3e78fa2bd2bf.png?x-oss-process=style/scale70)There are two types of risks in EigenLayer, the first being many operators colluding to attack a set of AVSs at the same time and the second being unintended slashing.

* **Operator Collusion**
The pre-emptive solution is to create an open-source dashboard where AVSs built on EigenLayer can monitor whether a set of operators participating in its validation tasks are restaked across many other AVSs. These AVS can then make specifications in its contracts that only incentivize EigenLayer operators participating in a small number of AVS.

The reactive solution is to limit the profit-from-corruption of any particular AVS once slashing conditions are triggered. For example, bridges can restrict the value flow within the slashing period, or oracles can have bounds on the total value of transactions during that period.

* **Unintended Slashing**
Before AVS and its associated infrastructure and contracts are battle-tested, many slashing risks need to be mitigated to avoid cascading risks. One risk is accidental unintended slashing vulnerabilities (e.g. programming bugs) in AVS creation that, if triggered, can cause honest operators to lose funds.

The pre-emptive solution is to put AVS codebases through rigorous security audits.

The reactive solution is to set up a governance committee that can have the ability to veto unintended slashing.

EigenLayer uses a reputation-based committee comprised of prominent names in the Ethereum and EigenLayer communities. The committee will be responsible for enabling upgrades to EigenLayer contracts, reviewing and vetoing slashing events and admitting new AVS into the slashing review process. This committee however, has no power to trigger slashing by itself, and any upgrade to the protocol’s contracts comes with a time lag.

AVS can use this committee to assure restakers that they will not be subject to malicious or inaccurate slashing due to bugs. At the same time, AVS developers can battle-test AVS-related code bases. Once mature and getting enough trust from restakers, AVS can stop using the committee as a fallback. AVS admission to build on top of EigenLayer may be subject to security audits and other due diligence, including checking of system requirements that validators have to serve the AVSs.

Maximum security is obtained when all of the ETH that has been restaked with EigenLayer is used to secure a given AVS. However, there are two hurdles associated with this. One, whether the expected revenue of the AVS outweighs operators’ operating costs, and two, whether operators have enough computational resources to participate in AVS validation.

EigenLayer proposes two possible module design patterns to alleviate these concerns:

* **Hyperscale AVS:** In a hyperscale AVS, the total computing workload is distributed among all N participating operators. This reduces storage costs as well as node throughput requirements, and the system itself can achieve high throughput by aggregating the performance of multiple nodes.
* **Lightweight:** Low-cost tasks that require low computing infrastructure, and can be performed redundantly by the operators, such as verifying zk-proofs.
EigenLayer can support many types of protocols by providing AVS services, including data availability layers, decentralized sequencers, light-node bridges to Ethereum, faster bridge between rollups, oracles, event-driven activation capabilities, MEV management, low-latency sidechains, and helping Ethereum achieve single slot finality.

Ethereum’s nodes are heterogeneous in terms of computing power, risk-reward appetite, and characteristics:

* Blockchains set block limits based on the weakest node performance, and stronger nodes can make excess resources available to other protocols through EigenLayer.
* Nodes with higher risk appetite can choose protocols with greater risk, less liquidity, and higher yields to provide validation to.
* By combining with verifiable credentials, SBT and other technologies, different protocols can select the most suitable nodes according to their characteristics to provide validation.
Ethereum’s upgrades are slow-moving, advancing through a robust off-chain democratic governance approach. EigenLayer’s emergence allows for innovation to be quickly deployed on Ethereum’s trust network, providing a testing platform for Ethereum mainnet, similar to a testnet. This helps avoid Ethereum’s trade-off between rapid innovation and democratic governance.

EigenLayer provides AVS with a marketplace for monetizing decentralization. As more and more AVSs specify that only home validators can participate in their tasks on EigenLayer, it increases profitability in running home nodes on Ethereum, further incentivising decentralization of the mainnet.

EigenLayer allows the AVSs to define its own node group (quorums) to run together with the node group that restakes ETH. For example, Protocol A can choose to use two quorums, one needs to restake ETH, while the other needs to stake their native protocol token $A. Such a mechanism can help the protocol token $A gain utility and accrue value for the protocol.

Business models that can be adopted by AVSs on top of EigenLayer include:

* **Pure wallet:** A company deploys an AVS service on top of EigenLayer, and users pay a fee to utilize the service, and part of the income is paid to the company’s wallet, and the rest to ETH restakers in EigenLayer.
* **Tokenization of fees:** AVS is deployed as a protocol on top of EigenLayer, and as users pay fees in a neutral denomination to utilize services, a fraction of those fees goes to token holders of $AVS as specified by the protocol, and the rest to ETH restakers in EigenLayer
* **Paying with protocol native tokens:** AVS is deployed as a protocol on top of EigenLayer, and as users pay fees in $AVS to utilize services, a fraction of those fees goes to a quorum of token holders as specified by the protocol, and the rest to ETH restakers in EigenLayer
* **Dual-coin staking:** The protocol specifies that the two quorums of $AVS stakers and ETH restakers operate together, which drives utility to $AVS, while using ETH restaking to hedge against a potential death spiral of the protocol token which would compromise the security of the AVS.
![](https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=2cda22263c5)